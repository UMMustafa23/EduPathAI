"use client"

import type React from "react"

import { useState } from "react"
import Link from "next/link"
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardHeader } from "@/components/ui/card"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"

// Sample study plan data - in a real app this would be generated by your AI
const sampleStudyPlan = {
  major: "Computer Science",
  matched_subject: "Computer Science",
  resources: {
    books: [
      "Introduction to Algorithms by Cormen et al.",
      "Clean Code by Robert C. Martin",
      "Design Patterns by Gamma et al.",
    ],
    courses: ["CS50 (Harvard)", "Introduction to Computer Science (MIT)", "Data Structures and Algorithms (Stanford)"],
    videos: "https://www.youtube.com/c/MITOpenCourseWare",
  },
  study_timeline: {
    year_1: {
      focus: "Fundamentals",
      courses: ["Introduction to Programming", "Discrete Mathematics"],
      projects: ["Simple console applications", "Basic data structures implementation"],
    },
    year_2: {
      focus: "Core Concepts",
      courses: ["Data Structures and Algorithms", "Computer Architecture"],
      projects: ["Web application development", "Database design project"],
    },
    year_3: {
      focus: "Advanced Topics",
      courses: ["Operating Systems", "Software Engineering"],
      projects: ["Full-stack application", "Distributed systems project"],
    },
    year_4: {
      focus: "Specialization",
      courses: ["Machine Learning", "Capstone Project"],
      projects: ["Industry-sponsored project", "Research thesis"],
    },
  },
}

export default function StudyPlan() {
  const [major, setMajor] = useState("Computer Science")
  const [showPlan, setShowPlan] = useState(false)
  const [studyPlan, setStudyPlan] = useState(sampleStudyPlan)

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault()
    // In a real app, you would call your AI to generate a study plan
    setStudyPlan({
      ...sampleStudyPlan,
      major: major,
    })
    setShowPlan(true)
  }

  return (
    <div className="container mx-auto px-4 py-8">
      <header className="text-center my-8">
        <h1 className="text-3xl font-bold mb-2">
          {showPlan ? `Study Plan for ${studyPlan.major}` : "Generate Study Plan"}
        </h1>
        <p className="text-muted-foreground">
          {showPlan
            ? "Your personalized 4-year study plan and resources"
            : "Get a personalized study plan for your chosen major"}
        </p>
      </header>

      <div className="max-w-4xl mx-auto">
        {!showPlan ? (
          <Card className="shadow max-w-md mx-auto">
            <CardContent className="p-6">
              <form onSubmit={handleSubmit} className="space-y-6">
                <div className="space-y-2">
                  <Label htmlFor="major">Enter your desired major or field of study:</Label>
                  <Input
                    id="major"
                    value={major}
                    onChange={(e) => setMajor(e.target.value)}
                    placeholder="e.g., Computer Science, Business Administration"
                    className="text-lg"
                    required
                  />
                  <p className="text-sm text-muted-foreground">
                    Examples: Computer Science, Data Science, Medicine, Business Administration
                  </p>
                </div>

                <div className="text-center pt-4">
                  <Button type="submit" size="lg">
                    Generate Study Plan
                  </Button>
                </div>
              </form>
            </CardContent>
          </Card>
        ) : (
          <div className="space-y-8">
            {/* Resources */}
            <Card className="shadow">
              <CardHeader className="bg-primary text-primary-foreground">
                <h2 className="text-xl font-semibold">Recommended Resources</h2>
              </CardHeader>
              <CardContent className="p-6">
                <div className="space-y-6">
                  <div>
                    <h3 className="text-lg font-medium mb-2">Books</h3>
                    <ul className="space-y-1">
                      {studyPlan.resources.books.map((book, index) => (
                        <li key={index} className="p-2 bg-muted/50 rounded">
                          {book}
                        </li>
                      ))}
                    </ul>
                  </div>

                  <div>
                    <h3 className="text-lg font-medium mb-2">Courses</h3>
                    <ul className="space-y-1">
                      {studyPlan.resources.courses.map((course, index) => (
                        <li key={index} className="p-2 bg-muted/50 rounded">
                          {course}
                        </li>
                      ))}
                    </ul>
                  </div>

                  <div>
                    <h3 className="text-lg font-medium mb-2">Video Resources</h3>
                    <a
                      href={studyPlan.resources.videos}
                      target="_blank"
                      rel="noopener noreferrer"
                      className="flex items-center justify-center p-3 bg-muted/50 rounded text-primary hover:bg-muted"
                    >
                      View Video Channel
                    </a>
                  </div>
                </div>
              </CardContent>
            </Card>

            {/* Timeline */}
            <Card className="shadow">
              <CardHeader className="bg-green-600 text-white">
                <h2 className="text-xl font-semibold">4-Year Study Timeline</h2>
              </CardHeader>
              <CardContent className="p-6">
                <div className="space-y-8">
                  {Object.entries(studyPlan.study_timeline).map(([year, details], index) => (
                    <div key={year} className="relative">
                      {index > 0 && (
                        <div className="absolute top-0 bottom-0 left-6 -translate-x-1/2 w-0.5 bg-muted-foreground/20 -mt-4"></div>
                      )}
                      <div className="flex gap-6">
                        <div className="relative z-10">
                          <div className="w-12 h-12 rounded-full bg-green-600 text-white flex items-center justify-center font-bold">
                            {year.replace("year_", "")}
                          </div>
                        </div>
                        <div className="flex-1">
                          <Card>
                            <CardHeader className="py-3 px-4 bg-muted/50">
                              <h3 className="font-medium">Focus: {details.focus}</h3>
                            </CardHeader>
                            <CardContent className="p-4">
                              <div className="space-y-4">
                                <div>
                                  <h4 className="font-medium mb-2">Courses</h4>
                                  <ul className="list-disc pl-5 space-y-1">
                                    {details.courses.map((course, i) => (
                                      <li key={i}>{course}</li>
                                    ))}
                                  </ul>
                                </div>

                                <div>
                                  <h4 className="font-medium mb-2">Projects</h4>
                                  <ul className="list-disc pl-5 space-y-1">
                                    {details.projects.map((project, i) => (
                                      <li key={i}>{project}</li>
                                    ))}
                                  </ul>
                                </div>
                              </div>
                            </CardContent>
                          </Card>
                        </div>
                      </div>
                    </div>
                  ))}
                </div>
              </CardContent>
            </Card>

            <div className="flex justify-center gap-4 mt-8">
              <Button variant="outline" onClick={() => setShowPlan(false)}>
                Generate Another Plan
              </Button>
              <Link href="/results">
                <Button variant="secondary">Back to Results</Button>
              </Link>
            </div>
          </div>
        )}
      </div>

      <footer className="text-center py-6 mt-12 text-sm text-muted-foreground">
        <p>Â© 2023 Career Advisor AI | Developed for AI Hackathon</p>
      </footer>
    </div>
  )
}

